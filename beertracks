#!/usr/bin/env ruby

require_relative 'lib/environment'
require_relative 'lib/parse_arguments'

command = ARGV[0]
options = ParseArguments.parse
options[:name] = ARGV[1]

Environment.environment = options[:environment] || "production"
database = Environment.database_connection

if command == "search"
 puts "What do you want to search for?"
 input = $stdin.gets.chomp
 puts "You asked for: #{input}"
 statement = "select entries.name from entries where name LIKE '%#{input}%'"
 results = database.execute(statement)
 puts results
elsif command == "add"
  error_messages = ParseArguments.validate(options)
  if error_messages.empty?
    statement = "insert into entries(name, style, ounces, cost) values('#{options[:name]}', '#{options[:style]}', #{options[:ounces]}, #{options[:cost]})"
    database.execute(statement)
    puts "I drank #{options[:ounces]} oz of #{options[:name]}, which is a #{options[:style]} style beer, costing me $#{options[:cost]}"
  else
    puts error_messages
  end
elsif command == "list"
  puts "All Entries:"
  puts Entries.all
else
  puts "Command not implemented"
end